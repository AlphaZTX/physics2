% \DeclareSourceFile{braket}
%
%
%
% \section{The \modu{ab.braket} module}
%    \begin{macrocode}
%<*ab.braket>
\ProvidesFile{phy-ab.braket.sty}
  [2023/05/16 `ab.braket' module of physics2]
%    \end{macrocode}
% This module requires \cs{phy@abopen} and \cs{phy@abclose} from \modu{ab}.
% This module may have conflict with \modu{braket}.
%    \begin{macrocode}
\phy@requiremodule{ab}
\ifdefined\phy@bra@@
  \PackageWarning{physics2}{You cannot load `ab.braket' and `braket'
    modules together.\MessageBreak Only `ab.braket' module works now.}
\fi
%    \end{macrocode}
% \begin{function}{\bra}
%   \begin{syntax}
%     \cs{bra} \char`\<\ \meta{subformula} \char`\|
%   \end{syntax}
% \end{function}
%    \begin{macrocode}
\phy@AB@gen{br.m}<{mr<|}{\mathopen#1\langle#2\mathclose#1\vert\endgroup}
\phy@AB@gen{br.a}<{r<|}{\phy@abopen\langle#1\phy@abclose\vert}
\phy@d@l@genxm{br.m}
\phy@d@l@genxa{br.a}
\DeclareRobustCommand\bra{\phy@d@lx{br.m}{br.a}}
%    \end{macrocode}
% \begin{function}{\ket}
%   \begin{syntax}
%     \cs{ket} \char`\|\ \meta{subformula} \char`\>
%   \end{syntax}
% \end{function}
%    \begin{macrocode}
\phy@AB@gen{kt.m}|{mr|>}{\mathopen#1\vert#2\mathclose#1\rangle\endgroup}
\phy@AB@gen{kt.a}|{r|>}{\phy@abopen\vert#1\phy@abclose\rangle}
\phy@d@l@genxm{kt.m}
\phy@d@l@genxa{kt.a}
\DeclareRobustCommand\ket{\phy@d@lx{kt.m}{kt.a}}
%    \end{macrocode}
% \begin{function}{\braket}
%   \begin{syntax}
%     \cs{braket} \char`\<\ \meta{subformula 1} \char`\|\ \meta{subformula 2} {\color{gray}\textrm{[}\char`\|\ \meta{subformula 3} \textrm{\dots]}} \char`\>
%   \end{syntax}
% \end{function}
%    \begin{macrocode}
\begingroup
\catcode`\|=\active
\gdef\phy@@mb@bk#1#2{\begingroup
  \mathcode`\|="8000\def|{\egroup#1\vert\bgroup}%
  \def\<{\mathrel{<}}\def\>{\mathrel{>}}%
  \mathopen#1\langle\bgroup#2\egroup\mathclose#1\rangle\endgroup}
\gdef\phy@@ab@bk#1{\begingroup
  \mathcode`\|="8000\def|{\egroup\phy@abb@bkv\bgroup}%
  \def\<{\mathrel{<}}\def\>{\mathrel{>}}%
  \phy@abopen\langle\bgroup#1\egroup\phy@abclose\rangle\endgroup}
\endgroup
\def\phy@abb@bkv{\middle\vert}
\phy@AB@gen{bk.m}<{mr<>}{\phy@@mb@bk#1{#2}\endgroup}
\phy@AB@gen{bk.a}<{r<>}{\phy@@ab@bk{#1}}
\phy@d@l@genxm{bk.m}
\phy@d@l@genxa{bk.a}
\DeclareRobustCommand\braket{\phy@d@lx{bk.m}{bk.a}}
%    \end{macrocode}
% \begin{function}{\ketbra}
%   \begin{syntax}
%     \cs{braket} \char`\|\ \meta{subformula 1} \char`\>\ \meta{subformula 2} \char`\<\ \meta{subformula 3} \char`\|
%   \end{syntax}
% \end{function}
%    \begin{macrocode}
\begingroup
\catcode`\<=\active
\catcode`\>=\active
\gdef\phy@@mb@kb#1#2{\begingroup
  \mathcode`\<="8000 \mathcode`\>="8000%
  \def<{#1\langle}\def>{#1\rangle}%
  \def\<{\phy@abb@l}\def\>{\phy@abb@r}%
  \mathopen#1\vert#2\mathclose#1\vert\endgroup}
\endgroup
\gdef\phy@@ab@kb#1>#2<#3\phy@@end{\begingroup
  \def\<{\phy@abb@l}\def\>{\phy@abb@r}%
  \phy@abopen\vert\mathopen{\phy@mathvphantom{#3}}#1\phy@abclose\rangle#2%
  \phy@abopen\langle#3\mathclose{\phy@mathvphantom{#1}}\phy@abclose\vert
\endgroup}
\AtBeginDocument{\ifcsname symbf\endcsname
  \def\phy@abb@l{\Umathchar 3 \symoperators "003C }%
  \def\phy@abb@r{\Umathchar 3 \symoperators "003E }%
\fi}
\def\phy@abb@l{\mathchar"313C }
\def\phy@abb@r{\mathchar"313E }
\phy@AB@gen{kb.m}|{mr||}{\phy@@mb@kb#1{#2}\endgroup}
\phy@AB@gen{kb.a}|{r||}{\phy@@ab@kb#1\phy@@end}
\phy@d@l@genxm{kb.m}
\phy@d@l@genxa{kb.a}
\DeclareRobustCommand\ketbra{\phy@d@lx{kb.m}{kb.a}}
%</ab.braket>
%    \end{macrocode}
% \section{The \modu{braket} module}
%    \begin{macrocode}
%<*braket>
\ProvidesFile{phy-braket.sty}
  [2023/10/24 `braket' module of physics2]
%    \end{macrocode}
% This module requires \cs{phy@abopen} and \cs{phy@abclose} from \modu{ab}.
% This module may have conflict with \modu{ab.braket}.
%    \begin{macrocode}
\phy@requiremodule{ab}
\ifdefined\phy@abb@bkv
  \PackageWarning{physics2}{You cannot load `ab.braket' and `braket'
    modules together.\MessageBreak Only `braket' module works now.}
\fi
%    \end{macrocode}
% \begin{function}{\bra}
%   \begin{syntax}
%     \cs{bra} * \oarg{biggg} \marg{subformula}
%   \end{syntax}
% \end{function}
%    \begin{macrocode}
\DeclareDocumentCommand\bra{ s o m }{%
  \IfBooleanTF{#1}
    {\mathopen\langle#3\mathclose\vert}
    {\IfValueTF{#2}
      {\csname#2l\endcsname\langle#3\csname#2r\endcsname\vert}
      {\phy@abopen\langle#3\phy@abclose\vert}%
    }%
}
%    \end{macrocode}
% \begin{function}{\ket}
%   \begin{syntax}
%     \cs{ket} * \oarg{biggg} \marg{subformula}
%   \end{syntax}
% \end{function}
%    \begin{macrocode}
\DeclareDocumentCommand\ket{ s o m }{%
  \IfBooleanTF{#1}
    {\mathopen\vert#3\mathclose\rangle}
    {\IfValueTF{#2}
      {\csname#2l\endcsname\vert#3\csname#2r\endcsname\rangle}
      {\phy@abopen\vert#3\phy@abclose\rangle}%
    }%
}
%    \end{macrocode}
% \begin{function}{\braket}
%   \begin{syntax}
%     \cs{ket} * [\meta{biggg}, $n \in \{1,2,3\}$] \marg{subformula 1} \dots \marg{subformula $n$}
%   \end{syntax}
% \end{function}
%    \begin{macrocode}
\DeclareDocumentCommand\braket{ s O{} }{%
  \IfBooleanTF{#1}%
    {%
      \gdef\@phy@bk@argnum{ii}%
      \phy@bk@doopt{#2}%
      \gdef\@phy@bk@l{mathopen}%
      \gdef\@phy@bk@m{mathord}%
      \gdef\@phy@bk@r{mathclose}%
    }%
    {%
      \gdef\@phy@bk@argnum{ii}%
      \gdef\@phy@bk@l{phy@abopen}%
      \gdef\@phy@bk@m{middle}%
      \gdef\@phy@bk@r{phy@abclose}%
      \phy@bk@doopt{#2}%
    }%
  \csname phy@bk@in@\@phy@bk@argnum\endcsname%
}
%    \end{macrocode}
% \begin{function}{\phy@bk@in@i, \phy@bk@in@ii, \phy@bk@in@iii}
%   \begin{syntax}
%     \cs{phy@bk@in@\meta{n.roman}} \marg{subformula 1} \dots \marg{subformula $n$}
%   \end{syntax}
%   \meta{n.roman} is $n$ in roman lowercase, where $n \in \{1,2,3\}$.
% \end{function}
%    \begin{macrocode}
\def\phy@bk@in@i#1{%
  \csname\@phy@bk@l\endcsname\langle{#1}%
  \csname\@phy@bk@r\endcsname\rangle}
\def\phy@bk@in@ii#1#2{%
  \csname\@phy@bk@l\endcsname\langle{#1}%
  \csname\@phy@bk@m\endcsname\vert{#2}%
  \csname\@phy@bk@r\endcsname\rangle}
\def\phy@bk@in@iii#1#2#3{%
  \csname\@phy@bk@l\endcsname\langle{#1}%
  \csname\@phy@bk@m\endcsname\vert{#2}%
  \csname\@phy@bk@m\endcsname\vert{#3}%
  \csname\@phy@bk@r\endcsname\rangle}
%    \end{macrocode}
% \begin{function}{\phy@bk@doopt, \phy@bk@do@pt}
%   \begin{syntax}
%     \cs{phy@bk@doopt} \marg{clist}
%   \end{syntax}
%   Parse the optional argument of \cs{braket}. This will add 3 entries to hash.
% \end{function}
%    \begin{macrocode}
\def\@phy@bk@do@pt#1,{\ifx#1\relax\@empty\else
  \edef\reserved@a{\zap@space#1 \@empty}%
  \ifx\reserved@a\@empty\else
    \ifcsname phy@ab@chk\expandafter\string\csname\reserved@a\endcsname\endcsname
      \xdef\@phy@bk@l{\reserved@a l}%
      \xdef\@phy@bk@m{\reserved@a}% but not m (m stands for \mathrel)
      \xdef\@phy@bk@r{\reserved@a r}%
    \else
      \ifnum\reserved@a>3%
        \PackageError{physics2}{\string\braket\space can only take 3
          mandatory arguments at most}{Check if you had written a number
          more than 3 in the [optional] argument.}%
      \fi
      \xdef\@phy@bk@argnum{\romannumeral\reserved@a}%
    \fi
  \fi
  \expandafter\@phy@bk@do@pt\fi}
\def\phy@bk@doopt#1{\@phy@bk@do@pt#1,\relax,}
%    \end{macrocode}
% \begin{function}{\ketbra}
%   \begin{syntax}
%     \cs{ketbra} * [\meta{biggg}] \marg{subformula 1} \oarg{between 1 and 2} \marg{subformula 2}
%   \end{syntax}
% \end{function}
%    \begin{macrocode}
\DeclareDocumentCommand\ketbra{ s o m O{} m }{%
  \IfBooleanTF{#1}%
    {\mathopen\vert#3\mathclose\rangle#4\mathopen\langle#5\mathclose\vert}%
    {\IfValueTF{#2}%
      {\csname#2l\endcsname\vert#3\csname#2r\endcsname\rangle#4%
        \csname#2l\endcsname\langle#5\csname#2r\endcsname\vert}%
      {\begingroup
        \phy@abopen\vert\mathopen{\phy@mathvphantom{#5}}#3\phy@abclose\rangle#4%
        \phy@abopen\langle#5\mathclose{\phy@mathvphantom{#3}}\phy@abclose\vert
      \endgroup}%
    }%
}
%</braket>
%    \end{macrocode}
\endinput
